{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 JSBasics\
\
<!DOCTYPE html>\
<html lang="en">\
   <head>\
      <meta charset="utf-8">\
      <title>JS Basics</title>\
      <link rel="stylesheet" type="text/css" href="JavaSBasics.css">\
      <meta name="description" content="Java Basics - Styling Sheets" >\
   </head>\
   <body>\
       <div class="wrapper">\
         <div class="header">\
            <h1>JavaScript Basics</h1>\
          </div>\
         <div class="side_nav">\
            <a href="">Home</a>\
              <ul>\
                <li><a href="">JavaScript Overview</a></li>\
                <ul>\
                   <li><a href="">Variable Declaration</a></li>\
                   <li><a href="">Variable Assignment</a></li>\
                   <li><a href="">Data Type</a></li>\
                   <li><a href="">Conditionals</a></li>\
                   <li><a href="">Loops</a></li>\
                   <li><a href="">Function</a></li>\
                 </ul>\
                   <li><a href="">Projects</a></li>\
                   <li><a href="">Assignments</a></li>\
                   <li><a href="">Quiz</a></li>\
               </ul>\
         </div>\
            <div class="main_content">\
              <h2>JavaScript Basics</h2>\
              <p>JavaScript is a cross-platform, object-oriented scripted language. JavaScript is extremely popular for a variety of reasons. It is a small and lightweight language allowing maximum flexibility for developers to take it in a bunch of different directions. JavaScript lives inside a host environment (a web browser or Node server), it can be connected to the objects of these environments to provide programmatic control over them.</p>\
              <ul>\
                <li><p><a href="">Variable Declaration</a> JavaScript variables are containers for storing data values - imagine a cup you fill with coffee, the cup holds the coffee, a variable holds a value. All JavaScript variables must be identified with unique means. These unique names are called identifiers. <span>var x;</span></p></li>\
                    <li><p><a href="">Variable Assignment</a> Assignment operators assign values to JavaScript variables - our cup can now have coffee poured in it, giving out variable a value to hold. The = assignment operator assigns a value to a variable. <span>var x = 10;</span></p></li>\
                    <li><p><a href="">Data Type</a> Data Types are an important concept; to be able to operate on variables, you need to know the data type. These are six data types that are JavaScript primitives: Boolean - <span>true</span> or <span>false;</span> null - <span>null</span> aka nothing; Number - <span>42</span> or <span>3.14159;</span> String - <span>"Coding Dojo Rocks!";</span> and Object - <span >\{first_name: 'Donovan', last_name:'An'\}</span></p></li>\
                    <li><p><a href="">Conditionals</a> When you write code, you want to perform different actions for different decisions - hitting different code blocks based on values or conditions that have been met. You can use conditional statements in your code to accomplis this. There are the following conditional statements: <span>if</span> a specified condition is true, do this code in our code block; <span>else if</span> to specify a new condition to test, if the first condition is false; <span>else </span> we execute this block of code.</p></li>\
                    <li><p><a href="">Loops</a> There are many different kinds of loops in every programming language, but they all essentially do the same thing: they will repeat an action some number of times. Imagine you have to run a mile, well you run around the track four times and then you stop. That's a loop!</p></li>\
                    <li><p><a href="">Function</a> Functions are an encapsulation of a code block. When we call out function this will run that code block. Think of it as a list of instructions. As an example imagine we are putting together a desk from Ikea, we open up the instruction manual and get started, first we screw the legs to the table top; next we place the table the right way up. Done! We finished our instructions. Sadly there a ton more tables to do so lets call our function over and over again.</p></li>\
                </ul>\
              </div>\
\
            <div class="footer">\
              <p>For More Useful Info Check out This URL: <a href="">JavaScript</a></p>\
            </div>\
\
         </div>\
      </div><!-- end of wrapper -->\
   </body>\
</html>\
\
/*CSS reset settings here*/\
\{\
 margin: 0px;\
 padding: 0px;\
\}\
.wrapper\{\
 width: 970px;\
 background-color: #1f234a;\
 padding: 20px;\
\}\
a\{\
  color: #c8d6f3;\
  font-size: 12px;\
\}\
p\{\
  color: #c1d5ea;\
  font-size: 12px;\
\}\
h1\{\
  color: #c8d6f3;\
  padding-left: 20px;\
  padding-top: 15px;\
  margin: 0;\
\}\
h2\{\
  color: #c8d6f3;\
\}\
.header\{\
 height: 80px;\
 background-color: #b62533;\
 margin-bottom: 20px;\
 border-radius: 10px;\
\}\
.side_nav\{\
 height: 300px;\
 width: 200px;\
 background-color: #008ca8;\
 display: inline-block;\
 vertical-align: top;\
 margin-right: 15px;\
 border-radius: 10px;\
 padding-top: 15px;\
 padding-left: 5px;\
\}\
ul\{\
  color: white;\
  padding-left: 20px;\
  margin: 0;\
\}\
.main_content\{\
 height: 400px;\
 width: 720px;\
 background-color: #0f1822;\
 display: inline-block;\
 padding:10px;\
 border-radius: 10px;\
\}\
.main_content h2\{\
    margin: 10px 0;\
\}\
.main_content ul li p\{\
    margin: 5px 0;\
\}\
span\{\
    color: #6d80ce;\
\}\
.footer\{\
 height: 50px;\
 width: 970px;\
 background-color: #5e6672;\
 display: inline-block;\
 margin-top: 15px;\
 border-radius: 10px;\
\}\
.footer p\{\
  padding-left: 15px;\
  padding-top: 5px;\
\}\
\
}