{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue116;\red0\green0\blue0;\red252\green102\blue63;
\red123\green136\blue148;\red104\green120\blue123;\red81\green200\blue109;\red54\green186\blue222;\red208\green59\blue135;
}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c52549;\csgenericrgb\c0\c0\c0;\cssrgb\c100000\c49020\c30980;
\cssrgb\c55294\c60392\c64706;\cssrgb\c48235\c54510\c55686;\cssrgb\c37255\c81176\c50196;\cssrgb\c24314\c77647\c89804;\cssrgb\c85882\c33333\c60000;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 numbersOnly\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf2 \strokec2 function\cf6 \strokec6 (\cf5 \strokec5 items\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \strokec4 \
\
  \cf7 \strokec7 // placeholder array that will hold all the numeric values after the type has been determined\cf4 \strokec4 \
  \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 placeHolder\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf6 \strokec6 [];\cf4 \strokec4 \
\
\
  \cf7 \strokec7 // a simple for loop that will go through each one of the items and check what it is, we know how to loop based on the number of items\cf4 \strokec4 \
\
  for\cf6 \strokec6 (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf8 \strokec8 0\cf6 \strokec6 ;\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf5 \strokec5 items\cf6 \strokec6 .\cf5 \strokec5 length\cf6 \strokec6 ;\cf4 \strokec4  \cf5 \strokec5 i\cf6 \strokec6 ++)\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \strokec4 \
\
    \cf7 \strokec7 // if the item at position i is of numeric type we push the item into the placeholder array, this does not disturb position\cf4 \strokec4 \
    if \cf6 \strokec6 (\cf4 \strokec4 typeof \cf5 \strokec5 items\cf6 \strokec6 [\cf5 \strokec5 i\cf6 \strokec6 ]\cf4 \strokec4  \cf6 \strokec6 ==\cf4 \strokec4  \cf9 \strokec9 "number"\cf6 \strokec6 )\{\cf4 \strokec4 \
      \cf5 \strokec5 placeHolder\cf6 \strokec6 .\cf5 \strokec5 push\cf6 \strokec6 (\cf5 \strokec5 items\cf6 \strokec6 [\cf5 \strokec5 i\cf6 \strokec6 ]);\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
  \cf6 \strokec6 \}\cf4 \strokec4 \
\
  \cf7 \strokec7 // finally, we return the placeHolder array since it has all of its values sorted out\cf4 \strokec4 \
  return \cf5 \strokec5 placeHolder\cf6 \strokec6 ;\cf4 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \strokec6 \}\cf4 \strokec4 \
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \strokec7 // tests\cf4 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 tests\cf4 \strokec4  \cf6 \strokec6 =\cf4 \strokec4  \cf5 \strokec5 numbersOnly\cf6 \strokec6 ([\cf8 \strokec8 1\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 2\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 3\cf6 \strokec6 ,\cf4 \strokec4  \cf9 \strokec9 \'93eight\'94\cf6 \strokec6 ,\cf4 \strokec4  \cf9 \strokec9 \'93four\'94\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 6\cf6 \strokec6 ]);\cf4 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \strokec5 console\cf6 \strokec6 .\cf5 \strokec5 log\cf6 \strokec6 (\cf5 \strokec5 tests\cf6 \strokec6 );\cf4 \strokec4 \
}